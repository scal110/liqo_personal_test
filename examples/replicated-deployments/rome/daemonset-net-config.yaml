apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: rome-net-setup
  namespace: liqo-demo
spec:
  selector:
    matchLabels:
      app: rome-net-setup
  template:
    metadata:
      labels:
        app: rome-net-setup
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - europe-rome-edge  # Specifica il nodo desiderato
      hostNetwork: true
      hostPID: true
      serviceAccountName: daemon-config
      containers:
      - name: rome-net-setup
        image: alpine:latest  # Usa un'immagine leggera che pu√≤ eseguire comandi di rete
        command:
          - /bin/sh
          - -c
          - |
            # Ottieni l'IP del Pod destinazione da un servizio o da un altro metodo
            DEST_POD_IP=$(kubectl get pod gateway-wg-rome -o jsonpath='{.status.podIP}')
            # Crea un tunnel Geneve usando l'IP ottenuto
            ip link add geneve0 type geneve id 100 remote $DEST_POD_IP dstport 10000
            ip addr add 10.100.1.1/24 dev geneve0
            ifconfig geneve0 mtu1340 ip

            # Configura una rotta o altre operazioni se necessario
            ip route add 10.203.0.0/24 dev geneve0

            # Mantieni il container in esecuzione
            tail -f /dev/null
        securityContext:
          privileged: true  # Necessario per configurare l'interfaccia di rete
      restartPolicy: Always
